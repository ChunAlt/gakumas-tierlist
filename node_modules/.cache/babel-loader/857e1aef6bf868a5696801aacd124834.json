{"ast":null,"code":"import React from'react';import VoiceIcon from'../icons/utx_ico_obtain_00.png';import DanceIcon from'../icons/utx_ico_obtain_01.png';import VisualIcon from'../icons/utx_ico_obtain_02.png';//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var type_to_icon=[VoiceIcon,DanceIcon,VisualIcon];function SelectedCards(props){var cards=[];var spRate=[props.weights.spRate,props.weights.spRate,props.weights.spRate];var pPoints=props.weights.memPoints;var _loop=function _loop(i){var lit_up=\"\";var dark=\"\";var card=props.selectedCards[i];spRate[card.type]+=card.sp_r;pPoints+=card.spp;for(var j=0;j<4;j++){if(j<card.limit_break){lit_up+=\"◆\";}else{dark+=\"◆\";}}var score=0;var statGains=card.start_b;if(card.type===0){statGains+=card.pb*props.weights.vocalLessons[0];}else if(card.type===1){statGains+=card.pb*props.weights.danceLessons[0];}else{statGains+=card.pb*props.weights.visualLessons[0];}if(card.type===0){statGains+=card.lb*props.weights.vocalLessons[1];}else if(card.type===1){statGains+=card.lb*props.weights.danceLessons[1];}else{statGains+=card.lb*props.weights.visualLessons[1];}if(card.type===0){statGains+=card.sp_lb*props.weights.vocalLessons[2];}else if(card.type===1){statGains+=card.sp_lb*props.weights.danceLessons[2];}else{statGains+=card.sp_lb*props.weights.visualLessons[2];}if(card.type===0){statGains+=card.n_lb*props.weights.vocalLessons[3];}else if(card.type===1){statGains+=card.n_lb*props.weights.danceLessons[3];}else{statGains+=card.n_lb*props.weights.visualLessons[3];}statGains+=card.rest_b*props.weights.rest;statGains+=card.gb*props.weights.gift;statGains+=card.db*props.weights.date;statGains+=card.sb*props.weights.shop;statGains+=card.cb*props.weights.classroom;statGains+=card.pdb*props.weights.drink;statGains+=card.mb;statGains+=card.ub*props.weights.upgrade.reduce(function(total,current){return total+current;},0);statGains+=card.m_ub*props.weights.upgrade[1];statGains+=card.a_cb*props.weights.cardAcq[0];statGains+=card.m_cb*props.weights.cardAcq[1];statGains+=card.con_cb*props.weights.cardAcq[2];statGains+=card.remove_b*props.weights.removal;// Convert stat gains to score\nscore+=Math.round(statGains);var sigImg1=\"\";var sigImg2=\"\";sigImg1=\"/signatureImages/signature_10000.png\";sigImg2=\"/signatureImages/signature_10000.png\";/*\n        if (card.sig === 0) {\n            sigImg1 = \"/signatureImages/signature_10000.png\"\n            sigImg2 = \"/signatureImages/signature_10000.png\"\r\n        }\n            \n        } else if (card.sig === 1) {\n            sigImg1 = \"/signatureImages/signature_\" + card.rarity + \"0000.png\"\r\n            sigImg2 = \"/signatureImages/signature_\" + card.id\r\n        } else {\n            sigImg1 = \"/signatureImages/signature_\" + card.id\n            sigImg2 = \"/signatureImages/signature_\" + card.rarity + \"1000.png\"\n        }\n        */cards.push(/*#__PURE__*/_jsxs(\"div\",{className:\"support-card\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"support-card-image\",name:card.id,src:process.env.PUBLIC_URL+\"/cardImages/support_card_s_\"+card.id+\".png\",title:card.id,alt:card.id,onClick:function onClick(){return props.onClick(card);}}),/*#__PURE__*/_jsx(\"img\",{className:\"type-icon\",name:\"type icon\",src:type_to_icon[card.type],title:\"type\",alt:\"card type\",onClick:function onClick(){return props.onClick(card);}}),/*#__PURE__*/_jsxs(\"span\",{className:\"limit-breaks\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"lb-yes\",children:lit_up}),/*#__PURE__*/_jsx(\"span\",{className:\"lb-no\",children:dark})]}),/*#__PURE__*/_jsx(\"img\",{className:\"signature-icon\",name:card.id,src:process.env.PUBLIC_URL+sigImg1,title:card.id,alt:card.id}),/*#__PURE__*/_jsx(\"img\",{className:\"signature-icon\",name:card.id,src:process.env.PUBLIC_URL+sigImg2,title:card.id,alt:card.id}),/*#__PURE__*/_jsx(\"span\",{className:\"score\",children:score})]},card.id));};for(var i=0;i<props.selectedCards.length;i++){_loop(i);}var noSP=[(100-spRate[0])/100,(100-spRate[1])/100,(100-spRate[2])/100];var spRate4=Math.pow(1-noSP[0]*noSP[1]*noSP[2],4);var spRateTotal=Math.round(spRate4*10000)/100;return/*#__PURE__*/_jsxs(\"div\",{className:\"selected-cards\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"Support Deck\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-explanation\",children:[\"The cards you're using. Click one to remove it, and click one in the tier list to add it.\",/*#__PURE__*/_jsx(\"br\",{}),\"The score will consider the stats gained when training with these cards.\"]}),cards,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"SP Lesson Rate: \",/*#__PURE__*/_jsxs(\"b\",{children:[spRate[0],\"%\"]}),\"/\",/*#__PURE__*/_jsxs(\"b\",{children:[spRate[1],\"%\"]}),\"/\",/*#__PURE__*/_jsxs(\"b\",{children:[spRate[2],\"%\"]}),\" - Probably of at least 1 SP Lesson each week (Master): \",/*#__PURE__*/_jsx(\"b\",{children:spRateTotal}),\"% \",/*#__PURE__*/_jsx(\"br\",{}),\"Starting P Points: \",/*#__PURE__*/_jsx(\"b\",{children:pPoints})]})]});}export default SelectedCards;","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SelectedCards.js"],"names":["React","VoiceIcon","DanceIcon","VisualIcon","type_to_icon","SelectedCards","props","cards","spRate","weights","pPoints","memPoints","i","lit_up","dark","card","selectedCards","type","sp_r","spp","j","limit_break","score","statGains","start_b","pb","vocalLessons","danceLessons","visualLessons","lb","sp_lb","n_lb","rest_b","rest","gb","gift","db","date","sb","shop","cb","classroom","pdb","drink","mb","ub","upgrade","reduce","total","current","m_ub","a_cb","cardAcq","m_cb","con_cb","remove_b","removal","Math","round","sigImg1","sigImg2","push","id","process","env","PUBLIC_URL","onClick","length","noSP","spRate4","pow","spRateTotal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,wFAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBH,SADiB,CAEjBC,SAFiB,CAGjBC,UAHiB,CAArB,CAMA,QAASE,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,CAACF,KAAK,CAACG,OAAN,CAAcD,MAAf,CAAuBF,KAAK,CAACG,OAAN,CAAcD,MAArC,CAA6CF,KAAK,CAACG,OAAN,CAAcD,MAA3D,CAAb,CACA,GAAIE,CAAAA,OAAO,CAAGJ,KAAK,CAACG,OAAN,CAAcE,SAA5B,CAH0B,yBAIjBC,CAJiB,EAKtB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,IAAI,CAAGT,KAAK,CAACU,aAAN,CAAoBJ,CAApB,CAAX,CACAJ,MAAM,CAACO,IAAI,CAACE,IAAN,CAAN,EAAqBF,IAAI,CAACG,IAA1B,CACAR,OAAO,EAAIK,IAAI,CAACI,GAAhB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CACxB,GAAIA,CAAC,CAAGL,IAAI,CAACM,WAAb,CAA0B,CACtBR,MAAM,EAAI,GAAV,CACH,CAFD,IAEO,CACHC,IAAI,EAAI,GAAR,CACH,CACJ,CAED,GAAIQ,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,SAAS,CAAGR,IAAI,CAACS,OAArB,CAEA,GAAIT,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACjBM,SAAS,EAAIR,IAAI,CAACU,EAAL,CAAUnB,KAAK,CAACG,OAAN,CAAciB,YAAd,CAA2B,CAA3B,CAAvB,CACH,CAFD,IAEO,IAAIX,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACxBM,SAAS,EAAIR,IAAI,CAACU,EAAL,CAAUnB,KAAK,CAACG,OAAN,CAAckB,YAAd,CAA2B,CAA3B,CAAvB,CACH,CAFM,IAEA,CACHJ,SAAS,EAAIR,IAAI,CAACU,EAAL,CAAUnB,KAAK,CAACG,OAAN,CAAcmB,aAAd,CAA4B,CAA5B,CAAvB,CACH,CAED,GAAIb,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACjBM,SAAS,EAAIR,IAAI,CAACc,EAAL,CAAUvB,KAAK,CAACG,OAAN,CAAciB,YAAd,CAA2B,CAA3B,CAAvB,CACH,CAFD,IAEO,IAAIX,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACxBM,SAAS,EAAIR,IAAI,CAACc,EAAL,CAAUvB,KAAK,CAACG,OAAN,CAAckB,YAAd,CAA2B,CAA3B,CAAvB,CACH,CAFM,IAEA,CACHJ,SAAS,EAAIR,IAAI,CAACc,EAAL,CAAUvB,KAAK,CAACG,OAAN,CAAcmB,aAAd,CAA4B,CAA5B,CAAvB,CACH,CAED,GAAIb,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACjBM,SAAS,EAAIR,IAAI,CAACe,KAAL,CAAaxB,KAAK,CAACG,OAAN,CAAciB,YAAd,CAA2B,CAA3B,CAA1B,CACH,CAFD,IAEO,IAAIX,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACxBM,SAAS,EAAIR,IAAI,CAACe,KAAL,CAAaxB,KAAK,CAACG,OAAN,CAAckB,YAAd,CAA2B,CAA3B,CAA1B,CACH,CAFM,IAEA,CACHJ,SAAS,EAAIR,IAAI,CAACe,KAAL,CAAaxB,KAAK,CAACG,OAAN,CAAcmB,aAAd,CAA4B,CAA5B,CAA1B,CACH,CAED,GAAIb,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACjBM,SAAS,EAAIR,IAAI,CAACgB,IAAL,CAAYzB,KAAK,CAACG,OAAN,CAAciB,YAAd,CAA2B,CAA3B,CAAzB,CACH,CAFD,IAEO,IAAIX,IAAI,CAACE,IAAL,GAAc,CAAlB,CAAqB,CACxBM,SAAS,EAAIR,IAAI,CAACgB,IAAL,CAAYzB,KAAK,CAACG,OAAN,CAAckB,YAAd,CAA2B,CAA3B,CAAzB,CACH,CAFM,IAEA,CACHJ,SAAS,EAAIR,IAAI,CAACgB,IAAL,CAAYzB,KAAK,CAACG,OAAN,CAAcmB,aAAd,CAA4B,CAA5B,CAAzB,CACH,CAEDL,SAAS,EAAIR,IAAI,CAACiB,MAAL,CAAc1B,KAAK,CAACG,OAAN,CAAcwB,IAAzC,CACAV,SAAS,EAAIR,IAAI,CAACmB,EAAL,CAAU5B,KAAK,CAACG,OAAN,CAAc0B,IAArC,CACAZ,SAAS,EAAIR,IAAI,CAACqB,EAAL,CAAU9B,KAAK,CAACG,OAAN,CAAc4B,IAArC,CACAd,SAAS,EAAIR,IAAI,CAACuB,EAAL,CAAUhC,KAAK,CAACG,OAAN,CAAc8B,IAArC,CACAhB,SAAS,EAAIR,IAAI,CAACyB,EAAL,CAAUlC,KAAK,CAACG,OAAN,CAAcgC,SAArC,CACAlB,SAAS,EAAIR,IAAI,CAAC2B,GAAL,CAAWpC,KAAK,CAACG,OAAN,CAAckC,KAAtC,CACApB,SAAS,EAAIR,IAAI,CAAC6B,EAAlB,CAEArB,SAAS,EAAIR,IAAI,CAAC8B,EAAL,CAAUvC,KAAK,CAACG,OAAN,CAAcqC,OAAd,CAAsBC,MAAtB,CAA6B,SAACC,KAAD,CAAQC,OAAR,QAAoBD,CAAAA,KAAK,CAAGC,OAA5B,EAA7B,CAAkE,CAAlE,CAAvB,CACA1B,SAAS,EAAIR,IAAI,CAACmC,IAAL,CAAY5C,KAAK,CAACG,OAAN,CAAcqC,OAAd,CAAsB,CAAtB,CAAzB,CAEAvB,SAAS,EAAIR,IAAI,CAACoC,IAAL,CAAY7C,KAAK,CAACG,OAAN,CAAc2C,OAAd,CAAsB,CAAtB,CAAzB,CACA7B,SAAS,EAAIR,IAAI,CAACsC,IAAL,CAAY/C,KAAK,CAACG,OAAN,CAAc2C,OAAd,CAAsB,CAAtB,CAAzB,CACA7B,SAAS,EAAIR,IAAI,CAACuC,MAAL,CAAchD,KAAK,CAACG,OAAN,CAAc2C,OAAd,CAAsB,CAAtB,CAA3B,CAEA7B,SAAS,EAAIR,IAAI,CAACwC,QAAL,CAAgBjD,KAAK,CAACG,OAAN,CAAc+C,OAA3C,CAEA;AACAlC,KAAK,EAAImC,IAAI,CAACC,KAAL,CAAWnC,SAAX,CAAT,CAEA,GAAIoC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAD,OAAO,CAAG,sCAAV,CACAC,OAAO,CAAG,sCAAV,CAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAEQrD,KAAK,CAACsD,IAAN,cACI,aAAmB,SAAS,CAAC,cAA7B,wBACI,YACI,SAAS,CAAC,oBADd,CAEI,IAAI,CAAE9C,IAAI,CAAC+C,EAFf,CAGI,GAAG,CAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyB,6BAAzB,CAAyDlD,IAAI,CAAC+C,EAA9D,CAAmE,MAH5E,CAII,KAAK,CAAE/C,IAAI,CAAC+C,EAJhB,CAKI,GAAG,CAAE/C,IAAI,CAAC+C,EALd,CAMI,OAAO,CAAE,yBAAMxD,CAAAA,KAAK,CAAC4D,OAAN,CAAcnD,IAAd,CAAN,EANb,EADJ,cASI,YACI,SAAS,CAAC,WADd,CAEI,IAAI,CAAC,WAFT,CAGI,GAAG,CAAEX,YAAY,CAACW,IAAI,CAACE,IAAN,CAHrB,CAII,KAAK,CAAC,MAJV,CAKI,GAAG,CAAC,WALR,CAMI,OAAO,CAAE,yBAAMX,CAAAA,KAAK,CAAC4D,OAAN,CAAcnD,IAAd,CAAN,EANb,EATJ,cAiBI,cAAM,SAAS,CAAC,cAAhB,wBACI,aAAM,SAAS,CAAC,QAAhB,UAA0BF,MAA1B,EADJ,cAEI,aAAM,SAAS,CAAC,OAAhB,UAAyBC,IAAzB,EAFJ,GAjBJ,cAqBI,YACI,SAAS,CAAC,gBADd,CAEI,IAAI,CAAEC,IAAI,CAAC+C,EAFf,CAGI,GAAG,CAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyBN,OAHlC,CAII,KAAK,CAAE5C,IAAI,CAAC+C,EAJhB,CAKI,GAAG,CAAE/C,IAAI,CAAC+C,EALd,EArBJ,cA4BI,YACI,SAAS,CAAC,gBADd,CAEI,IAAI,CAAE/C,IAAI,CAAC+C,EAFf,CAGI,GAAG,CAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyBL,OAHlC,CAII,KAAK,CAAE7C,IAAI,CAAC+C,EAJhB,CAKI,GAAG,CAAE/C,IAAI,CAAC+C,EALd,EA5BJ,cAmCI,aAAM,SAAS,CAAC,OAAhB,UACKxC,KADL,EAnCJ,GAAUP,IAAI,CAAC+C,EAAf,CADJ,EA9FsB,EAI1B,IAAK,GAAIlD,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,KAAK,CAACU,aAAN,CAAoBmD,MAAxC,CAAgDvD,CAAC,EAAjD,CAAqD,OAA5CA,CAA4C,EAoIpD,CAED,GAAIwD,CAAAA,IAAI,CAAG,CAAC,CAAC,IAAM5D,MAAM,CAAC,CAAD,CAAb,EAAoB,GAArB,CAA0B,CAAC,IAAMA,MAAM,CAAC,CAAD,CAAb,EAAoB,GAA9C,CAAmD,CAAC,IAAMA,MAAM,CAAC,CAAD,CAAb,EAAoB,GAAvE,CAAX,CACA,GAAI6D,CAAAA,OAAO,CAAGZ,IAAI,CAACa,GAAL,CAAU,EAAKF,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAoBA,IAAI,CAAC,CAAD,CAAvC,CAA8C,CAA9C,CAAd,CACA,GAAIG,CAAAA,WAAW,CAAGd,IAAI,CAACC,KAAL,CAAWW,OAAO,CAAG,KAArB,EAA8B,GAAhD,CAEA,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,gBAAf,0BADJ,cAEI,aAAK,SAAS,CAAC,qBAAf,oHAC6F,aAD7F,8EAFJ,CAMK9D,KANL,cAOI,aAPJ,cAQI,aARJ,cASI,aATJ,cAUI,aAVJ,cAWI,uDACoB,qBAAIC,MAAM,CAAC,CAAD,CAAV,OADpB,kBACwC,qBAAIA,MAAM,CAAC,CAAD,CAAV,OADxC,kBAC4D,qBAAIA,MAAM,CAAC,CAAD,CAAV,OAD5D,yEACuI,mBAAI+D,WAAJ,EADvI,mBAC6J,aAD7J,oCAEuB,mBAAI7D,OAAJ,EAFvB,GAXJ,GADJ,CA2BH,CAED,cAAeL,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png';\n\n//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nconst type_to_icon = [\n    VoiceIcon,\n    DanceIcon,\n    VisualIcon,\n]\n\nfunction SelectedCards(props) {\n    let cards = [];\n    let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n    let pPoints = props.weights.memPoints;\n    for (let i = 0; i < props.selectedCards.length; i++) {\n        let lit_up = \"\";\n        let dark = \"\";\n        let card = props.selectedCards[i];\n        spRate[card.type] += card.sp_r;\n        pPoints += card.spp;\n\n        for (let j = 0; j < 4; j++) {\n            if (j < card.limit_break) {\n                lit_up += \"◆\";\n            } else {\n                dark += \"◆\";\n            }\n        }\n\n        let score = 0;\n        let statGains = card.start_b;\n\n        if (card.type === 0) {\n            statGains += card.pb * props.weights.vocalLessons[0];\n        } else if (card.type === 1) {\n            statGains += card.pb * props.weights.danceLessons[0];\n        } else {\n            statGains += card.pb * props.weights.visualLessons[0];\n        }\n\n        if (card.type === 0) {\n            statGains += card.lb * props.weights.vocalLessons[1];\n        } else if (card.type === 1) {\n            statGains += card.lb * props.weights.danceLessons[1];\n        } else {\n            statGains += card.lb * props.weights.visualLessons[1];\n        }\n\n        if (card.type === 0) {\n            statGains += card.sp_lb * props.weights.vocalLessons[2];\n        } else if (card.type === 1) {\n            statGains += card.sp_lb * props.weights.danceLessons[2];\n        } else {\n            statGains += card.sp_lb * props.weights.visualLessons[2];\n        }\n\n        if (card.type === 0) {\n            statGains += card.n_lb * props.weights.vocalLessons[3];\n        } else if (card.type === 1) {\n            statGains += card.n_lb * props.weights.danceLessons[3];\n        } else {\n            statGains += card.n_lb * props.weights.visualLessons[3];\n        }\n\n        statGains += card.rest_b * props.weights.rest;\n        statGains += card.gb * props.weights.gift;\n        statGains += card.db * props.weights.date;\n        statGains += card.sb * props.weights.shop;\n        statGains += card.cb * props.weights.classroom;\n        statGains += card.pdb * props.weights.drink;\n        statGains += card.mb;\n\n        statGains += card.ub * props.weights.upgrade.reduce((total, current) => total + current, 0);\n        statGains += card.m_ub * props.weights.upgrade[1];\n\n        statGains += card.a_cb * props.weights.cardAcq[0];\n        statGains += card.m_cb * props.weights.cardAcq[1];\n        statGains += card.con_cb * props.weights.cardAcq[2];\n\n        statGains += card.remove_b * props.weights.removal;\n\n        // Convert stat gains to score\n        score += Math.round(statGains);\n\n        let sigImg1 = \"\";\n        let sigImg2 = \"\";\n        sigImg1 = \"/signatureImages/signature_10000.png\"\n        sigImg2 = \"/signatureImages/signature_10000.png\"\n\n        /*\n        if (card.sig === 0) {\n            sigImg1 = \"/signatureImages/signature_10000.png\"\n            sigImg2 = \"/signatureImages/signature_10000.png\"\r\n        }\n            \n        } else if (card.sig === 1) {\n            sigImg1 = \"/signatureImages/signature_\" + card.rarity + \"0000.png\"\r\n            sigImg2 = \"/signatureImages/signature_\" + card.id\r\n        } else {\n            sigImg1 = \"/signatureImages/signature_\" + card.id\n            sigImg2 = \"/signatureImages/signature_\" + card.rarity + \"1000.png\"\n        }\n        */    \n\n        cards.push(\n            <div key={card.id} className=\"support-card\">\n                <img\n                    className=\"support-card-image\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\"}\n                    title={card.id}\n                    alt={card.id}\n                    onClick={() => props.onClick(card)}\n                />\n                <img\n                    className=\"type-icon\"\n                    name=\"type icon\"\n                    src={type_to_icon[card.type]}\n                    title=\"type\"\n                    alt=\"card type\"\n                    onClick={() => props.onClick(card)}\n                />\n                <span className=\"limit-breaks\">\n                    <span className=\"lb-yes\">{lit_up}</span>\n                    <span className=\"lb-no\">{dark}</span>\n                </span>\n                <img\n                    className=\"signature-icon\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + sigImg1}\n                    title={card.id}\n                    alt={card.id}\n                />\n                <img\n                    className=\"signature-icon\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + sigImg2}\n                    title={card.id}\n                    alt={card.id}\n                />\n                <span className=\"score\">\n                    {score}\n                </span>\n            </div>\n        );\n\n    }\n\n    let noSP = [(100 - spRate[0]) / 100, (100 - spRate[1]) / 100, (100 - spRate[2]) / 100];\n    let spRate4 = Math.pow((1 - (noSP[0] * noSP[1] * noSP[2])), 4);\n    let spRateTotal = Math.round(spRate4 * 10000) / 100;\n    \n    return (\n        <div className=\"selected-cards\">\n            <div className=\"section-header\">Support Deck</div>\n            <div className=\"section-explanation\">\n                The cards you're using. Click one to remove it, and click one in the tier list to add it.<br/>\n                The score will consider the stats gained when training with these cards.\n            </div>\n            {cards}\n            <br />\n            <br />\n            <br />\n            <br />\n            <div>\n                SP Lesson Rate: <b>{spRate[0]}%</b>/<b>{spRate[1]}%</b>/<b>{spRate[2]}%</b> - Probably of at least 1 SP Lesson each week (Master): <b>{spRateTotal}</b>% <br />\n                Starting P Points: <b>{pPoints}</b>\n            </div>\n            {/*\n            <div>\n                Examples:\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Voice (4 Gift, 2 Shop)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 1 Shop, 4 Rest)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 3 Shop)</button>\n\n            </div>\n            */}\n        </div>\n    );\n}\n\nexport default SelectedCards;"]},"metadata":{},"sourceType":"module"}