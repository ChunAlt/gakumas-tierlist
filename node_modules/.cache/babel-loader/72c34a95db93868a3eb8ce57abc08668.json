{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chun\\\\GakuTest\\\\src\\\\components\\\\SelectedCards.js\";\nimport React from 'react';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png'; //import events from '../card-events';\n\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type_to_icon = [VoiceIcon, DanceIcon, VisualIcon];\n\nfunction SelectedCards(props) {\n  let cards = [];\n  let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n  let pPoints = props.weights.memPoints;\n\n  for (let i = 0; i < props.selectedCards.length; i++) {\n    let lit_up = \"\";\n    let dark = \"\";\n    let card = props.selectedCards[i];\n    spRate[card.type] += card.sp_r;\n    pPoints += card.spp;\n\n    for (let j = 0; j < 4; j++) {\n      if (j < card.limit_break) {\n        lit_up += \"◆\";\n      } else {\n        dark += \"◆\";\n      }\n    }\n\n    let score = 0;\n    let statGains = card.start_b;\n\n    if (card.type === 0) {\n      statGains += card.pb * props.weights.vocalLessons[0];\n    } else if (card.type === 1) {\n      statGains += card.pb * props.weights.danceLessons[0];\n    } else {\n      statGains += card.pb * props.weights.visualLessons[0];\n    }\n\n    if (card.type === 0) {\n      statGains += card.lb * props.weights.vocalLessons[1];\n    } else if (card.type === 1) {\n      statGains += card.lb * props.weights.danceLessons[1];\n    } else {\n      statGains += card.lb * props.weights.visualLessons[1];\n    }\n\n    if (card.type === 0) {\n      statGains += card.sp_lb * props.weights.vocalLessons[2];\n    } else if (card.type === 1) {\n      statGains += card.sp_lb * props.weights.danceLessons[2];\n    } else {\n      statGains += card.sp_lb * props.weights.visualLessons[2];\n    }\n\n    if (card.type === 0) {\n      statGains += card.n_lb * props.weights.vocalLessons[3];\n    } else if (card.type === 1) {\n      statGains += card.n_lb * props.weights.danceLessons[3];\n    } else {\n      statGains += card.n_lb * props.weights.visualLessons[3];\n    }\n\n    statGains += card.rest_b * props.weights.rest;\n    statGains += card.gb * props.weights.gift;\n    statGains += card.db * props.weights.date;\n    statGains += card.sb * props.weights.shop;\n    statGains += card.cb * props.weights.classroom;\n    statGains += card.pdb * props.weights.drink;\n    statGains += card.mb;\n    statGains += card.ub * props.weights.upgrade.reduce((total, current) => total + current, 0);\n    statGains += card.m_ub * props.weights.upgrade[1];\n    statGains += card.a_cb * props.weights.cardAcq[0];\n    statGains += card.m_cb * props.weights.cardAcq[1];\n    statGains += card.con_cb * props.weights.cardAcq[2];\n    statGains += card.remove_b * props.weights.removal; // Convert stat gains to score\n\n    score += statGains;\n    let sigImg1 = \"\";\n    let sigImg2 = \"\";\n    sigImg1 = \"/signatureImages/signature_10000.png\";\n    sigImg2 = \"/signatureImages/signature_10000.png\";\n    /*\n    if (card.sig === 0) {\n        sigImg1 = \"/signatureImages/signature_10000.png\"\n        sigImg2 = \"/signatureImages/signature_10000.png\"\r\n    }\n        \n    } else if (card.sig === 1) {\n        sigImg1 = \"/signatureImages/signature_\" + card.rarity + \"0000.png\"\r\n        sigImg2 = \"/signatureImages/signature_\" + card.id\r\n    } else {\n        sigImg1 = \"/signatureImages/signature_\" + card.id\n        sigImg2 = \"/signatureImages/signature_\" + card.rarity + \"1000.png\"\n    }\n    */\n\n    cards.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"support-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"support-card-image\",\n        name: card.id,\n        src: process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\",\n        title: card.id,\n        alt: card.id,\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"type-icon\",\n        name: \"type icon\",\n        src: type_to_icon[card.type],\n        title: \"type\",\n        alt: \"card type\",\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"limit-breaks\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-yes\",\n          children: lit_up\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-no\",\n          children: dark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"signature-icon\",\n        name: card.id,\n        src: process.env.PUBLIC_URL + sigImg1,\n        title: card.id,\n        alt: card.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"signature-icon\",\n        name: card.id,\n        src: process.env.PUBLIC_URL + sigImg2,\n        title: card.id,\n        alt: card.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this));\n  }\n\n  let noSP = [(100 - spRate[0]) / 100, (100 - spRate[1]) / 100, (100 - spRate[2]) / 100];\n  let spRate4 = Math.pow(1 - noSP[0] * noSP[1] * noSP[2], 4);\n  let spRateTotal = Math.round(spRate4 * 10000) / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Support Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-explanation\",\n      children: [\"The cards you're using. Click one to remove it, and click one in the tier list to add it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 106\n      }, this), \"The score will consider the stats gained when training with these cards.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), cards, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"SP Lesson Rate: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[0], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[1], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 53\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[2], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 73\n      }, this), \" - Probably of at least 1 SP Lesson each week (Master): \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: spRateTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 148\n      }, this), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 170\n      }, this), \"Starting P Points: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: pPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SelectedCards;\nexport default SelectedCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedCards\");","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SelectedCards.js"],"names":["React","VoiceIcon","DanceIcon","VisualIcon","type_to_icon","SelectedCards","props","cards","spRate","weights","pPoints","memPoints","i","selectedCards","length","lit_up","dark","card","type","sp_r","spp","j","limit_break","score","statGains","start_b","pb","vocalLessons","danceLessons","visualLessons","lb","sp_lb","n_lb","rest_b","rest","gb","gift","db","date","sb","shop","cb","classroom","pdb","drink","mb","ub","upgrade","reduce","total","current","m_ub","a_cb","cardAcq","m_cb","con_cb","remove_b","removal","sigImg1","sigImg2","push","id","process","env","PUBLIC_URL","onClick","noSP","spRate4","Math","pow","spRateTotal","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png';\n\n//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nconst type_to_icon = [\n    VoiceIcon,\n    DanceIcon,\n    VisualIcon,\n]\n\nfunction SelectedCards(props) {\n    let cards = [];\n    let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n    let pPoints = props.weights.memPoints;\n    for (let i = 0; i < props.selectedCards.length; i++) {\n        let lit_up = \"\";\n        let dark = \"\";\n        let card = props.selectedCards[i];\n        spRate[card.type] += card.sp_r;\n        pPoints += card.spp;\n\n        for (let j = 0; j < 4; j++) {\n            if (j < card.limit_break) {\n                lit_up += \"◆\";\n            } else {\n                dark += \"◆\";\n            }\n        }\n\n        let score = 0;\n        let statGains = card.start_b;\n\n        if (card.type === 0) {\n            statGains += card.pb * props.weights.vocalLessons[0];\n        } else if (card.type === 1) {\n            statGains += card.pb * props.weights.danceLessons[0];\n        } else {\n            statGains += card.pb * props.weights.visualLessons[0];\n        }\n\n        if (card.type === 0) {\n            statGains += card.lb * props.weights.vocalLessons[1];\n        } else if (card.type === 1) {\n            statGains += card.lb * props.weights.danceLessons[1];\n        } else {\n            statGains += card.lb * props.weights.visualLessons[1];\n        }\n\n        if (card.type === 0) {\n            statGains += card.sp_lb * props.weights.vocalLessons[2];\n        } else if (card.type === 1) {\n            statGains += card.sp_lb * props.weights.danceLessons[2];\n        } else {\n            statGains += card.sp_lb * props.weights.visualLessons[2];\n        }\n\n        if (card.type === 0) {\n            statGains += card.n_lb * props.weights.vocalLessons[3];\n        } else if (card.type === 1) {\n            statGains += card.n_lb * props.weights.danceLessons[3];\n        } else {\n            statGains += card.n_lb * props.weights.visualLessons[3];\n        }\n\n        statGains += card.rest_b * props.weights.rest;\n        statGains += card.gb * props.weights.gift;\n        statGains += card.db * props.weights.date;\n        statGains += card.sb * props.weights.shop;\n        statGains += card.cb * props.weights.classroom;\n        statGains += card.pdb * props.weights.drink;\n        statGains += card.mb;\n\n        statGains += card.ub * props.weights.upgrade.reduce((total, current) => total + current, 0);\n        statGains += card.m_ub * props.weights.upgrade[1];\n\n        statGains += card.a_cb * props.weights.cardAcq[0];\n        statGains += card.m_cb * props.weights.cardAcq[1];\n        statGains += card.con_cb * props.weights.cardAcq[2];\n\n        statGains += card.remove_b * props.weights.removal;\n\n        // Convert stat gains to score\n        score += statGains;\n\n        let sigImg1 = \"\";\n        let sigImg2 = \"\";\n        sigImg1 = \"/signatureImages/signature_10000.png\"\n        sigImg2 = \"/signatureImages/signature_10000.png\"\n\n        /*\n        if (card.sig === 0) {\n            sigImg1 = \"/signatureImages/signature_10000.png\"\n            sigImg2 = \"/signatureImages/signature_10000.png\"\r\n        }\n            \n        } else if (card.sig === 1) {\n            sigImg1 = \"/signatureImages/signature_\" + card.rarity + \"0000.png\"\r\n            sigImg2 = \"/signatureImages/signature_\" + card.id\r\n        } else {\n            sigImg1 = \"/signatureImages/signature_\" + card.id\n            sigImg2 = \"/signatureImages/signature_\" + card.rarity + \"1000.png\"\n        }\n        */    \n\n        cards.push(\n            <div key={card.id} className=\"support-card\">\n                <img\n                    className=\"support-card-image\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\"}\n                    title={card.id}\n                    alt={card.id}\n                    onClick={() => props.onClick(card)}\n                />\n                <img\n                    className=\"type-icon\"\n                    name=\"type icon\"\n                    src={type_to_icon[card.type]}\n                    title=\"type\"\n                    alt=\"card type\"\n                    onClick={() => props.onClick(card)}\n                />\n                <span className=\"limit-breaks\">\n                    <span className=\"lb-yes\">{lit_up}</span>\n                    <span className=\"lb-no\">{dark}</span>\n                </span>\n                <img\n                    className=\"signature-icon\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + sigImg1}\n                    title={card.id}\n                    alt={card.id}\n                />\n                <img\n                    className=\"signature-icon\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + sigImg2}\n                    title={card.id}\n                    alt={card.id}\n                />\n                <span className=\"score\">\n                    {score}\n                </span>\n            </div>\n        );\n\n    }\n\n    let noSP = [(100 - spRate[0]) / 100, (100 - spRate[1]) / 100, (100 - spRate[2]) / 100];\n    let spRate4 = Math.pow((1 - (noSP[0] * noSP[1] * noSP[2])), 4);\n    let spRateTotal = Math.round(spRate4 * 10000) / 100;\n    \n    return (\n        <div className=\"selected-cards\">\n            <div className=\"section-header\">Support Deck</div>\n            <div className=\"section-explanation\">\n                The cards you're using. Click one to remove it, and click one in the tier list to add it.<br/>\n                The score will consider the stats gained when training with these cards.\n            </div>\n            {cards}\n            <br />\n            <br />\n            <br />\n            <br />\n            <div>\n                SP Lesson Rate: <b>{spRate[0]}%</b>/<b>{spRate[1]}%</b>/<b>{spRate[2]}%</b> - Probably of at least 1 SP Lesson each week (Master): <b>{spRateTotal}</b>% <br />\n                Starting P Points: <b>{pPoints}</b>\n            </div>\n            {/*\n            <div>\n                Examples:\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Voice (4 Gift, 2 Shop)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 1 Shop, 4 Rest)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 3 Shop)</button>\n\n            </div>\n            */}\n        </div>\n    );\n}\n\nexport default SelectedCards;"]},"metadata":{},"sourceType":"module"}