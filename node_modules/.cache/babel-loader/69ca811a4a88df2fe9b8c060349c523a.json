{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chun\\\\GakuTest\\\\src\\\\components\\\\SelectedCards.js\";\nimport React from 'react';\nimport SpeedIcon from '../icons/utx_ico_obtain_00.png';\nimport StaminaIcon from '../icons/utx_ico_obtain_01.png';\nimport PowerIcon from '../icons/utx_ico_obtain_02.png';\nimport GutsIcon from '../icons/utx_ico_obtain_03.png';\nimport WisdomIcon from '../icons/utx_ico_obtain_04.png';\nimport FriendIcon from '../icons/utx_ico_obtain_05.png'; //import events from '../card-events';\n\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type_to_icon = [SpeedIcon, StaminaIcon, PowerIcon, GutsIcon, WisdomIcon, \"\", FriendIcon];\n\nfunction SelectedCards(props) {\n  let cards = [];\n  let raceBonus = 0;\n  let statsNoTraining = [120, 120, 120, 120, 120];\n\n  for (let i = 0; i < props.selectedCards.length; i++) {\n    let lit_up = \"\";\n    let dark = \"\";\n    let card = props.selectedCards[i]; //raceBonus += card.start_b;\n\n    raceBonus += 1;\n\n    for (let j = 0; j < 4; j++) {\n      if (j < card.limit_break) {\n        lit_up += \"◆\";\n      } else {\n        dark += \"◆\";\n      }\n    }\n    /*\n    for (let stat = 0; stat < 5; stat++) {\n        if (events[card.id]) {\n            statsNoTraining[stat] += events[card.id][stat] * card.effect_size_up;\n        }\n        statsNoTraining[stat] += card.starting_stats[stat];\n    }\n    */\n\n\n    cards.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"support-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"support-card-image\",\n        name: card.id,\n        src: process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\",\n        title: card.id,\n        alt: card.id,\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"type-icon\",\n        name: \"type icon\",\n        src: type_to_icon[card.type],\n        title: \"type\",\n        alt: \"card type\",\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"limit-breaks\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-yes\",\n          children: lit_up\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-no\",\n          children: dark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n  }\n\n  let raceMultiplier = 1 + raceBonus / 100;\n  /*\n  for (let i = 0; i < 3; i++) {\n      let raceGain = Math.floor(raceRewards[i] * raceMultiplier);\n      raceGain = raceGain * props.weights.races[i];\n      for (let stat = 0; stat < 5; stat++) {\n          statsNoTraining[stat] += raceGain / 5;\n      }\n  }\n  */\n\n  /*\n   for (let stat = 0; stat < 5; stat++) {\n       statsNoTraining[stat] += Math.floor(13.5 * raceMultiplier) * 3;\n       statsNoTraining[stat] = Math.round(statsNoTraining[stat]);\n   }\n   */\n\n  console.log(\"Stat gains without training: \");\n  console.log(statsNoTraining);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Support Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-explanation\",\n      children: [\"The cards you're using. Click one to remove it, and click one in the tier list to add it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 106\n      }, this), \"The score will consider the stats gained when training with these cards.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), cards, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Race Bonus: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: raceBonus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 35\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"(aim for 35 for URA/Aoharu, 50 for MANT)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Presets:\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Speed/Power\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Speed/Stamina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Speed/Int\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Guts/Int\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Aoharu Parent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Highlander\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-preset\",\n        onClick: () => props.onLoadPreset([10001, 10002, 10003, 10004, 10005]),\n        children: \"Race Bonus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SelectedCards;\nexport default SelectedCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedCards\");","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SelectedCards.js"],"names":["React","SpeedIcon","StaminaIcon","PowerIcon","GutsIcon","WisdomIcon","FriendIcon","type_to_icon","SelectedCards","props","cards","raceBonus","statsNoTraining","i","selectedCards","length","lit_up","dark","card","j","limit_break","push","id","process","env","PUBLIC_URL","onClick","type","raceMultiplier","console","log","onLoadPreset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SpeedIcon from '../icons/utx_ico_obtain_00.png';\nimport StaminaIcon from '../icons/utx_ico_obtain_01.png';\nimport PowerIcon from '../icons/utx_ico_obtain_02.png';\nimport GutsIcon from '../icons/utx_ico_obtain_03.png';\nimport WisdomIcon from '../icons/utx_ico_obtain_04.png';\nimport FriendIcon from '../icons/utx_ico_obtain_05.png';\n//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nconst type_to_icon = [\n    SpeedIcon,\n    StaminaIcon,\n    PowerIcon,\n    GutsIcon,\n    WisdomIcon,\n    \"\",\n    FriendIcon,\n]\n\nfunction SelectedCards(props) {\n    let cards = [];\n    let raceBonus = 0;\n    let statsNoTraining = [120,120,120,120,120];\n    \n    for (let i = 0; i < props.selectedCards.length; i++) {\n        let lit_up = \"\";\n        let dark = \"\";\n        let card = props.selectedCards[i];\n        //raceBonus += card.start_b;\n        raceBonus += 1;\n\n        for(let j = 0; j < 4; j++) {\n            if (j < card.limit_break) {\n                lit_up += \"◆\";\n            } else {\n                dark += \"◆\";\n            }\n        }\n\n        /*\n        for (let stat = 0; stat < 5; stat++) {\n            if (events[card.id]) {\n                statsNoTraining[stat] += events[card.id][stat] * card.effect_size_up;\n            }\n            statsNoTraining[stat] += card.starting_stats[stat];\n        }\n        */\n\n        cards.push(\n            <div className=\"support-card\">\n                <img\n                    className=\"support-card-image\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\"}\n                    title={card.id}\n                    alt={card.id}\n                    onClick={() => props.onClick(card)}\n                />\n                <img\n                    className=\"type-icon\"\n                    name=\"type icon\"\n                    src={type_to_icon[card.type]}\n                    title=\"type\"\n                    alt=\"card type\"\n                    onClick={() => props.onClick(card)}\n                />\n                <span className=\"limit-breaks\">\n                    <span className=\"lb-yes\">{lit_up}</span>\n                    <span className=\"lb-no\">{dark}</span>\n                </span>\n            </div>\n        );\n    }\n\n    let raceMultiplier = 1 + (raceBonus / 100);\n    /*\n    for (let i = 0; i < 3; i++) {\n        let raceGain = Math.floor(raceRewards[i] * raceMultiplier);\n        raceGain = raceGain * props.weights.races[i];\n        for (let stat = 0; stat < 5; stat++) {\n            statsNoTraining[stat] += raceGain / 5;\n        }\n    }\n    */\n   /*\n    for (let stat = 0; stat < 5; stat++) {\n        statsNoTraining[stat] += Math.floor(13.5 * raceMultiplier) * 3;\n        statsNoTraining[stat] = Math.round(statsNoTraining[stat]);\n    }\n    */\n    console.log(\"Stat gains without training: \");\n    console.log(statsNoTraining);\n\n    return (\n        <div className=\"selected-cards\">\n            <div className=\"section-header\">Support Deck</div>\n            <div className=\"section-explanation\">\n                The cards you're using. Click one to remove it, and click one in the tier list to add it.<br/>\n                The score will consider the stats gained when training with these cards.\n            </div>\n            {cards}\n            <div>\n                Total Race Bonus: <b>{raceBonus}</b> <i>(aim for 35 for URA/Aoharu, 50 for MANT)</i>\n            </div>\n            <div>\n                Presets:\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Speed/Power</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Speed/Stamina</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Speed/Int</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Guts/Int</button>\n            </div>\n            <div>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Aoharu Parent</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Highlander</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Race Bonus</button>\n            </div>\n        </div>\n    );\n}\n\nexport default SelectedCards;"]},"metadata":{},"sourceType":"module"}