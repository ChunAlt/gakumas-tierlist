{"ast":null,"code":"import React from'react';import cards from'../cards';import VoiceIcon from'../icons/utx_ico_obtain_00.png';import DanceIcon from'../icons/utx_ico_obtain_01.png';import VisualIcon from'../icons/utx_ico_obtain_02.png';//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var type_to_icon=[VoiceIcon,DanceIcon,VisualIcon];function SelectedCards(props){var cards=[];var spRate=[props.weights.spRate,props.weights.spRate,props.weights.spRate];var pPoints=props.weights.memPoints;var _loop=function _loop(i){var lit_up=\"\";var dark=\"\";var card=props.selectedCards[i];spRate[card.type]+=card.sp_r;pPoints+=card.spp;for(var j=0;j<4;j++){if(j<card.limit_break){lit_up+=\"◆\";}else{dark+=\"◆\";}}cards.push(/*#__PURE__*/_jsxs(\"div\",{className:\"support-card\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"support-card-image\",name:card.id,src:process.env.PUBLIC_URL+\"/cardImages/support_card_s_\"+card.id+\".png\",title:card.id,alt:card.id,onClick:function onClick(){return props.onClick(card);}}),/*#__PURE__*/_jsx(\"img\",{className:\"type-icon\",name:\"type icon\",src:type_to_icon[card.type],title:\"type\",alt:\"card type\",onClick:function onClick(){return props.onClick(card);}}),/*#__PURE__*/_jsxs(\"span\",{className:\"limit-breaks\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"lb-yes\",children:lit_up}),/*#__PURE__*/_jsx(\"span\",{className:\"lb-no\",children:dark})]})]},card.id));};for(var i=0;i<props.selectedCards.length;i++){_loop(i);}var spRate4=Math.pow(spRate[0]*spRate[1]*spRate[2]/100,4);var spRate5=Math.round(spRate4)/100;return/*#__PURE__*/_jsxs(\"div\",{className:\"selected-cards\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"Support Deck\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-explanation\",children:[\"The cards you're using. Click one to remove it, and click one in the tier list to add it.\",/*#__PURE__*/_jsx(\"br\",{}),\"The score will consider the stats gained when training with these cards.\"]}),cards,/*#__PURE__*/_jsxs(\"div\",{children:[\"SP Lesson Rate: \",/*#__PURE__*/_jsx(\"b\",{children:spRate[0]}),\"/\",/*#__PURE__*/_jsx(\"b\",{children:spRate[1]}),\"/\",/*#__PURE__*/_jsx(\"b\",{children:spRate[2]}),\" (Probably of at least 1 SP Lesson each week: \",/*#__PURE__*/_jsx(\"b\",{children:spRate5}),\"%) \",/*#__PURE__*/_jsx(\"br\",{}),\"Starting P Points: \",/*#__PURE__*/_jsx(\"b\",{children:pPoints})]})]});}export default SelectedCards;","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SelectedCards.js"],"names":["React","cards","VoiceIcon","DanceIcon","VisualIcon","type_to_icon","SelectedCards","props","spRate","weights","pPoints","memPoints","i","lit_up","dark","card","selectedCards","type","sp_r","spp","j","limit_break","push","id","process","env","PUBLIC_URL","onClick","length","spRate4","Math","pow","spRate5","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cards from '../cards';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png';\n\n//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nconst type_to_icon = [\n    VoiceIcon,\n    DanceIcon,\n    VisualIcon,\n]\n\nfunction SelectedCards(props) {\n    let cards = [];\n    let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n    let pPoints = props.weights.memPoints;\n    for (let i = 0; i < props.selectedCards.length; i++) {\n        let lit_up = \"\";\n        let dark = \"\";\n        let card = props.selectedCards[i];\n        spRate[card.type] += card.sp_r;\n        pPoints += card.spp;\n\n        for (let j = 0; j < 4; j++) {\n            if (j < card.limit_break) {\n                lit_up += \"◆\";\n            } else {\n                dark += \"◆\";\n            }\n        }\n\n        cards.push(\n            <div key={card.id} className=\"support-card\">\n                <img\n                    className=\"support-card-image\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\"}\n                    title={card.id}\n                    alt={card.id}\n                    onClick={() => props.onClick(card)}\n                />\n                <img\n                    className=\"type-icon\"\n                    name=\"type icon\"\n                    src={type_to_icon[card.type]}\n                    title=\"type\"\n                    alt=\"card type\"\n                    onClick={() => props.onClick(card)}\n                />\n                <span className=\"limit-breaks\">\n                    <span className=\"lb-yes\">{lit_up}</span>\n                    <span className=\"lb-no\">{dark}</span>\n                </span>\n            </div>\n        );\n        \n    }\n    let spRate4 = Math.pow((spRate[0] * spRate[1] * spRate[2]) / 100, 4);\n    let spRate5 = Math.round(spRate4)/100;\n    return (\n        <div className=\"selected-cards\">\n            <div className=\"section-header\">Support Deck</div>\n            <div className=\"section-explanation\">\n                The cards you're using. Click one to remove it, and click one in the tier list to add it.<br/>\n                The score will consider the stats gained when training with these cards.\n            </div>\n            {cards}\n            <div>\n                SP Lesson Rate: <b>{spRate[0]}</b>/<b>{spRate[1]}</b>/<b>{spRate[2]}</b> (Probably of at least 1 SP Lesson each week: <b>{spRate5}</b>%) <br />\n                Starting P Points: <b>{pPoints}</b>\n            </div>\n            {/*\n            <div>\n                Examples:\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Voice (4 Gift, 2 Shop)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 1 Shop, 4 Rest)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 3 Shop)</button>\n\n            </div>\n            */}\n        </div>\n    );\n}\n\nexport default SelectedCards;"]},"metadata":{},"sourceType":"module"}