{"ast":null,"code":"import _slicedToArray from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _classCallCheck from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Chun/GakuTest/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import SupportCard from'./SupportCard';import{supportCardProperties}from'../constants';import Select from'react-select';import allCards from'../cards';import FreeIcon from'../icons/utx_ico_obtain_10.png';import SenseIcon from'../icons/utx_ico_obtain_11.png';import LogiclIcon from'../icons/utx_ico_obtain_12.png';import AnomalyIcon from'../icons/utx_ico_obtain_13.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ordinal=[\"1st\",\"2nd\",\"3rd\",\"4th\",\"5th\",\"6th\",\"7th\"];var plan_names=[\"Free\",\"Sense\",\"Logic\",\"Anomaly\"];var type_to_icon=[FreeIcon,SenseIcon,LogiclIcon,AnomalyIcon];var TierList=/*#__PURE__*/function(_React$Component){_inherits(TierList,_React$Component);var _super=_createSuper(TierList);function TierList(props){var _this;_classCallCheck(this,TierList);_this=_super.call(this,props);_this.state={dropdownSelections:[\"none\",\"none\",\"none\"]};_this.onDropdown1Changed=_this.onDropdown1Changed.bind(_assertThisInitialized(_this));_this.onDropdown2Changed=_this.onDropdown2Changed.bind(_assertThisInitialized(_this));_this.onDropdown3Changed=_this.onDropdown3Changed.bind(_assertThisInitialized(_this));_this.onToggleResults=_this.onToggleResults.bind(_assertThisInitialized(_this));_this.onToggleResults2=_this.onToggleResults2.bind(_assertThisInitialized(_this));return _this;}//lmao\n_createClass(TierList,[{key:\"onDropdown1Changed\",value:function onDropdown1Changed(newValue){var newSelections=this.state.dropdownSelections.slice();newSelections[0]=newValue.value;this.setState({dropdownSelections:newSelections});}},{key:\"onDropdown2Changed\",value:function onDropdown2Changed(newValue){var newSelections=this.state.dropdownSelections.slice();newSelections[1]=newValue.value;this.setState({dropdownSelections:newSelections});}},{key:\"onDropdown3Changed\",value:function onDropdown3Changed(newValue){var newSelections=this.state.dropdownSelections.slice();newSelections[2]=newValue.value;this.setState({dropdownSelections:newSelections});}},{key:\"onToggleResults\",value:function onToggleResults(event){this.setState({show:!this.state.show});}},{key:\"onToggleResults2\",value:function onToggleResults2(event){this.setState({show:!this.state.show});}},{key:\"render\",value:function render(){var _this2=this;var cards=this.props.cards;var selectedNames=this.props.selectedCards.map(function(card){return card.char_name;});var processedCardsAll=processCards(allCards,this.props.weights,this.props.selectedCards);if(this.props.weights.type>-1){cards=cards.filter(function(e){return e.type===_this2.props.weights.type;});console.log(this.props.weights.type);}var processedCards=processCards(cards,this.props.weights,this.props.selectedCards);if(processedCards.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"tier-list\"});}var rows=[[]];var current_row=0;var step=(processedCards[0].score-processedCards[processedCards.length-1].score)/7;var boundary=processedCards[0].score-step;var _loop=function _loop(i){while(processedCards[i].score<boundary-1){rows.push([]);current_row++;boundary-=step;}rows[current_row].push(/*#__PURE__*/_jsxs(\"div\",{className:\"support-card\",children:[/*#__PURE__*/_jsx(SupportCard,{id:processedCards[i].id,lb:processedCards[i].lb,score:processedCards[i].score,info:processedCards[i].info,charName:processedCards[i].char_name,selected:selectedNames,card:cards.find(function(c){return c.id===processedCards[i].id&&c.limit_break===processedCards[i].lb;}),onClick:function onClick(){return _this2.props.cardSelected(cards.find(function(c){return c.id===processedCards[i].id&&c.limit_break===processedCards[i].lb;}));},stats:_this2.state.dropdownSelections},processedCards[i].id+\"LB\"+processedCards[i].lb),/*#__PURE__*/_jsx(\"img\",{className:\"plan-icon\",name:\"plan icon\",src:type_to_icon[processedCards[i].info.plan],title:processedCards[i].info.plan,alt:\"card type\",onClick:function onClick(){return _this2.props.cardSelected(cards.find(function(c){return c.id===processedCards[i].id&&c.limit_break===processedCards[i].lb;}));}})]},processedCards[i].id+\"LB\"+processedCards[i].lb));};for(var i=0;i<processedCards.length;i++){_loop(i);}var resultValues=processScores(processedCardsAll,this.props.weights,this.props.selectedCards);var tiers=[];for(var _i=0;_i<7;_i++){tiers.push(/*#__PURE__*/_jsxs(\"div\",{className:\"tier\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tier-letter\",children:tierNames[_i]}),/*#__PURE__*/_jsx(\"div\",{className:\"tier-images\",children:rows[_i]})]},tierNames[_i]));}var count=this.props.selectedCards.filter(function(c){return c.type==_this2.props.weights.type;}).length;var dropdownOptions=[{value:\"none\",label:\"None\"}];var properties=Object.keys(supportCardProperties).sort();for(var _i2=0;_i2<properties.length;_i2++){dropdownOptions.push({value:properties[_i2],label:supportCardProperties[properties[_i2]].friendly_name});}var resultsTable=[[resultValues[0].startingStats[0],resultValues[0].startingStats[1],resultValues[0].startingStats[2],resultValues[0].startingStats[0]+resultValues[0].startingStats[1]+resultValues[0].startingStats[2]],[resultValues[0].startingMult[0],resultValues[0].startingMult[1],resultValues[0].startingMult[2],resultValues[0].startingMult[0]+resultValues[0].startingMult[1]+resultValues[0].startingMult[2]],[Math.round(resultValues[0].finalScore[0]),Math.round(resultValues[0].finalScore[1]),Math.round(resultValues[0].finalScore[2]),Math.round(resultValues[0].finalScore[0])+Math.round(resultValues[0].finalScore[1])+Math.round(resultValues[0].finalScore[2])]];var rowLabels=[\"Starting  Stats\",\"Stats Multiplier\",\"Predicted Final Stats\"];var results=[];var resultsTable2=[[resultValues[0].startingStats[0],resultValues[0].startingStats[1],resultValues[0].startingStats[2],resultValues[0].startingStats[0]+resultValues[0].startingStats[1]+resultValues[0].startingStats[2]],[resultValues[0].startingMult[0],resultValues[0].startingMult[1],resultValues[0].startingMult[2],resultValues[0].startingMult[0]+resultValues[0].startingMult[1]+resultValues[0].startingMult[2]],[Math.round(resultValues[0].finalScore[0]),Math.round(resultValues[0].finalScore[1]),Math.round(resultValues[0].finalScore[2]),Math.round(resultValues[0].finalScore[0])+Math.round(resultValues[0].finalScore[1])+Math.round(resultValues[0].finalScore[2])]];var rowLabels2=[\"Starting  Stats\",\"Stats Multiplier\",\"Predicted Final Stats\"];var results2=[];results.push(/*#__PURE__*/_jsxs(\"div\",{className:\"weights\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"weight-row\",children:/*#__PURE__*/_jsx(\"button\",{id:\"results-toggle\",type:\"button\",onClick:this.onToggleResults,children:this.state.show?\"Hide Results\":\"Show Results\"})}),this.state.show&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"number-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Vocal\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dance\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Visual\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:resultsTable.map(function(row,rowIndex){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:rowLabels[rowIndex]}),row.map(function(num,colIndex){return/*#__PURE__*/_jsx(\"td\",{children:rowIndex===1?\"\".concat(num,\"%\"):num},colIndex);})]},rowIndex);})})]})})})]},resultValues[0].finalScore[0]));return/*#__PURE__*/_jsxs(\"div\",{className:\"tier-list\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-explanation\",children:results}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectors\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"selectLabel\",children:\"Show Stats:\"}),/*#__PURE__*/_jsx(Select,{className:\"select\",options:dropdownOptions,onChange:this.onDropdown1Changed,defaultValue:{value:\"none\",label:\"None\"}}),/*#__PURE__*/_jsx(Select,{className:\"select\",options:dropdownOptions,onChange:this.onDropdown2Changed,defaultValue:{value:\"none\",label:\"None\"}}),/*#__PURE__*/_jsx(Select,{className:\"select\",options:dropdownOptions,onChange:this.onDropdown3Changed,defaultValue:{value:\"none\",label:\"None\"}})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"label\",children:[\"Cards are ordered within tiers, but tiers are relatively arbitrary since I just used the Uma setting. \",/*#__PURE__*/_jsx(\"br\",{}),\"Asari cards ruin literally everything I've done because I forgot they existed, and thus, will not be implemented for now.\"]}),tiers]});}}]);return TierList;}(React.Component);var tierNames=['S','A','B','C','D','E','F'];function processCards(cards,weights,selectedCards){var processedCards=[];selectedCards=selectedCards.slice();// Calculate some stuff here so we don't have to do it a million times later\nfor(var card=0;card<selectedCards.length;card++){var selectedCard=selectedCards[card];selectedCard.index=card;}for(var i=0;i<cards.length;i++){var info={};var _card=JSON.parse(JSON.stringify(cards[i]));_card.index=6;// Add starting stats and stats from events\nvar score=0;var statGains=_card.start_b;info.type=_card.type;info.plan=_card.plan;info.start_b=_card.start_b;info.pb=_card.pb;info.spRate=_card.sp_r;info.spp=_card.spp;if(_card.type===0){statGains+=_card.pb*weights.vocalLessons[0];}else if(_card.type===1){statGains+=_card.pb*weights.danceLessons[0];}else{statGains+=_card.pb*weights.visualLessons[0];}if(_card.type===0){statGains+=_card.lb*weights.vocalLessons[1];}else if(_card.type===1){statGains+=_card.lb*weights.danceLessons[1];}else{statGains+=_card.lb*weights.visualLessons[1];}if(_card.type===0){statGains+=_card.sp_lb*weights.vocalLessons[2];}else if(_card.type===1){statGains+=_card.sp_lb*weights.danceLessons[2];}else{statGains+=_card.sp_lb*weights.visualLessons[2];}if(_card.type===0){statGains+=_card.n_lb*weights.vocalLessons[3];}else if(_card.type===1){statGains+=_card.n_lb*weights.danceLessons[3];}else{statGains+=_card.n_lb*weights.visualLessons[3];}statGains+=_card.rest_b*weights.rest;statGains+=_card.gb*weights.gift;statGains+=_card.db*weights.date;statGains+=_card.sb*weights.shop;statGains+=_card.cb*weights.classroom;statGains+=_card.pdb*weights.drink;statGains+=_card.mb;statGains+=_card.ub*weights.upgrade.reduce(function(total,current){return total+current;},0);statGains+=_card.m_ub*weights.upgrade[1];statGains+=_card.a_cb*weights.cardAcq[0];statGains+=_card.m_cb*weights.cardAcq[1];statGains+=_card.con_cb*weights.cardAcq[2];statGains+=_card.remove_b*weights.removal;// Convert stat gains to score\nscore+=statGains;processedCards.push({id:_card.id,lb:_card.limit_break,score:score,info:info,char_name:_card.char_name});}processedCards.sort(function(a,b){return b.score-a.score;});return processedCards;}function processScores(processedCards,weights,selectedCards){selectedCards=selectedCards.slice();var startingStats=[0,0,0];startingStats=startingStats.map(function(stat,index){return stat+weights.idolStats[index]+weights.memStats[index];});var idolMemMult=[0,0,0];idolMemMult=idolMemMult.map(function(stat,index){return stat+weights.idolMult[index]+weights.memMult[index];});var startingMult=idolMemMult;var cardBonus=[0,0,0];var cardStartBonus=[0,0,0];var spRate=weights.spRate;var _loop2=function _loop2(card){var cardID=selectedCards[card].id;var cardLB=selectedCards[card].limit_break;var type=selectedCards[card].type;var matchingCards=processedCards.find(function(processedCards){return processedCards.id===cardID&&processedCards.lb===cardLB;});startingStats[type]+=matchingCards.info.start_b;startingMult[type]+=matchingCards.info.pb*100;spRate+=matchingCards.info.spRate;cardBonus[type]+=matchingCards.score;cardStartBonus[type]+=matchingCards.info.start_b;};for(var card=0;card<selectedCards.length;card++){_loop2(card);}var examBonus=50;var lessonGain=[(1+idolMemMult[0]/100)*weights.vocalLessons[0],(1+idolMemMult[1]/100)*weights.danceLessons[0],(1+idolMemMult[2]/100)*weights.visualLessons[0]];var finalScore=startingStats.map(function(stat,index){return stat+cardBonus[index]+lessonGain[index]+weights.classroomStats[index]+examBonus-cardStartBonus[index];});var roundedScore=Object.fromEntries(Object.entries(finalScore).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return[key,Math.min(value,weights.statCap)];}));var results=[{startingStats:startingStats,startingMult:startingMult,spRate:spRate,cardBonus:cardBonus,finalScore:roundedScore}];return results;}export default TierList;","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/TierList.js"],"names":["React","SupportCard","supportCardProperties","Select","allCards","FreeIcon","SenseIcon","LogiclIcon","AnomalyIcon","ordinal","plan_names","type_to_icon","TierList","props","state","dropdownSelections","onDropdown1Changed","bind","onDropdown2Changed","onDropdown3Changed","onToggleResults","onToggleResults2","newValue","newSelections","slice","value","setState","event","show","cards","selectedNames","selectedCards","map","card","char_name","processedCardsAll","processCards","weights","type","filter","e","console","log","processedCards","length","rows","current_row","step","score","boundary","i","push","id","lb","info","find","c","limit_break","cardSelected","plan","resultValues","processScores","tiers","tierNames","count","dropdownOptions","label","properties","Object","keys","sort","friendly_name","resultsTable","startingStats","startingMult","Math","round","finalScore","rowLabels","results","resultsTable2","rowLabels2","results2","row","rowIndex","num","colIndex","Component","selectedCard","index","JSON","parse","stringify","statGains","start_b","pb","spRate","sp_r","spp","vocalLessons","danceLessons","visualLessons","sp_lb","n_lb","rest_b","rest","gb","gift","db","date","sb","shop","cb","classroom","pdb","drink","mb","ub","upgrade","reduce","total","current","m_ub","a_cb","cardAcq","m_cb","con_cb","remove_b","removal","a","b","stat","idolStats","memStats","idolMemMult","idolMult","memMult","cardBonus","cardStartBonus","cardID","cardLB","matchingCards","examBonus","lessonGain","classroomStats","roundedScore","fromEntries","entries","key","min","statCap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SupportCard from './SupportCard';\r\nimport { supportCardProperties } from '../constants';\r\nimport Select from 'react-select';\r\nimport allCards from '../cards';\r\nimport FreeIcon from '../icons/utx_ico_obtain_10.png';\r\nimport SenseIcon from '../icons/utx_ico_obtain_11.png';\r\nimport LogiclIcon from '../icons/utx_ico_obtain_12.png';\r\nimport AnomalyIcon from '../icons/utx_ico_obtain_13.png';\r\n\r\nconst ordinal = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\"];\r\nconst plan_names = [\"Free\", \"Sense\", \"Logic\", \"Anomaly\"];\r\n\r\nconst type_to_icon = [\r\n    FreeIcon,\r\n    SenseIcon,\r\n    LogiclIcon,\r\n    AnomalyIcon,\r\n]\r\n\r\nclass TierList extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dropdownSelections: [\"none\",\"none\",\"none\"]\r\n        }\r\n\r\n        this.onDropdown1Changed = this.onDropdown1Changed.bind(this);\r\n        this.onDropdown2Changed = this.onDropdown2Changed.bind(this);\r\n        this.onDropdown3Changed = this.onDropdown3Changed.bind(this);\r\n        this.onToggleResults = this.onToggleResults.bind(this);\r\n        this.onToggleResults2 = this.onToggleResults2.bind(this);\r\n    }\r\n\r\n    //lmao\r\n    onDropdown1Changed(newValue) {\r\n        let newSelections = this.state.dropdownSelections.slice();\r\n        newSelections[0] = newValue.value;\r\n        this.setState({dropdownSelections:newSelections});\r\n    }\r\n    onDropdown2Changed(newValue) {\r\n        let newSelections = this.state.dropdownSelections.slice();\r\n        newSelections[1] = newValue.value;\r\n        this.setState({dropdownSelections:newSelections});\r\n    }\r\n    onDropdown3Changed(newValue) {\r\n        let newSelections = this.state.dropdownSelections.slice();\r\n        newSelections[2] = newValue.value;\r\n        this.setState({dropdownSelections:newSelections});\r\n    }\r\n\r\n    onToggleResults(event) {\r\n        this.setState({ show: !this.state.show });\r\n    }\r\n\r\n    onToggleResults2(event) {\r\n        this.setState({ show: !this.state.show });\r\n    }\r\n\r\n    render() {\r\n        let cards = this.props.cards;\r\n        let selectedNames = this.props.selectedCards.map(card => card.char_name);\r\n        let processedCardsAll = processCards(allCards, this.props.weights, this.props.selectedCards);\r\n\r\n        if (this.props.weights.type > -1) {\r\n            cards = cards.filter(e => e.type === this.props.weights.type);\r\n            console.log(this.props.weights.type)\r\n        }\r\n\r\n        let processedCards = processCards(cards, this.props.weights, this.props.selectedCards);\r\n\r\n        if (processedCards.length === 0) {\r\n            return <div className=\"tier-list\"></div>;\r\n        }\r\n\r\n        let rows = [[]];\r\n        let current_row = 0;\r\n        let step = (processedCards[0].score - processedCards[processedCards.length - 1].score) / 7;\r\n        let boundary = processedCards[0].score - step;\r\n\r\n        for (let i = 0; i < processedCards.length; i++) {\r\n            while (processedCards[i].score < boundary - 1) {\r\n                rows.push([]);\r\n                current_row++;\r\n                boundary -= step;\r\n            }\r\n\r\n            rows[current_row].push((\r\n                <div key = { processedCards[i].id + \"LB\" + processedCards[i].lb } className=\"support-card\">\r\n\r\n                    <SupportCard\r\n                        id={processedCards[i].id}\r\n                        lb={processedCards[i].lb}\r\n                        score={processedCards[i].score}\r\n                        key={processedCards[i].id + \"LB\" + processedCards[i].lb}\r\n                        info={processedCards[i].info}\r\n                        charName={processedCards[i].char_name}\r\n                        selected={selectedNames}\r\n                        card={cards.find((c) => c.id === processedCards[i].id && c.limit_break === processedCards[i].lb)}\r\n                        onClick={() => this.props.cardSelected(cards.find((c) => c.id === processedCards[i].id && c.limit_break === processedCards[i].lb))}\r\n                        stats={this.state.dropdownSelections}\r\n                    />\r\n                    <img\r\n                        className=\"plan-icon\"\r\n                        name=\"plan icon\"\r\n                        src={type_to_icon[processedCards[i].info.plan]}\r\n                        title={processedCards[i].info.plan}\r\n                        alt=\"card type\"\r\n                        onClick={() => this.props.cardSelected(cards.find((c) => c.id === processedCards[i].id && c.limit_break === processedCards[i].lb))}\r\n                    />\r\n                </div>\r\n            ));\r\n        }\r\n\r\n\r\n        let resultValues = processScores(processedCardsAll, this.props.weights, this.props.selectedCards);\r\n\r\n        let tiers = [];\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            tiers.push(\r\n                <div className=\"tier\" key={tierNames[i]}>\r\n                    <div className=\"tier-letter\">{tierNames[i]}</div>\r\n                    <div className=\"tier-images\">{rows[i]}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let count = this.props.selectedCards.filter((c) => c.type == this.props.weights.type).length;\r\n        let dropdownOptions = [{ value: \"none\", label: \"None\" }];\r\n        let properties = Object.keys(supportCardProperties).sort();\r\n        for (let i = 0; i < properties.length; i++) {\r\n            dropdownOptions.push({\r\n                value: properties[i],\r\n                label: supportCardProperties[properties[i]].friendly_name\r\n            });\r\n        }\r\n\r\n        const resultsTable = [\r\n            [resultValues[0].startingStats[0], resultValues[0].startingStats[1], resultValues[0].startingStats[2], resultValues[0].startingStats[0] + resultValues[0].startingStats[1] + resultValues[0].startingStats[2]],\r\n            [resultValues[0].startingMult[0], resultValues[0].startingMult[1], resultValues[0].startingMult[2], resultValues[0].startingMult[0] + resultValues[0].startingMult[1] + resultValues[0].startingMult[2]],\r\n            [Math.round(resultValues[0].finalScore[0]), Math.round(resultValues[0].finalScore[1]), Math.round(resultValues[0].finalScore[2]), Math.round(resultValues[0].finalScore[0]) + Math.round(resultValues[0].finalScore[1]) + Math.round(resultValues[0].finalScore[2])],\r\n        ];\r\n\r\n        const rowLabels = [\"Starting  Stats\", \"Stats Multiplier\", \"Predicted Final Stats\"];\r\n\r\n        let results = [];\r\n\r\n\r\n        const resultsTable2 = [\r\n            [resultValues[0].startingStats[0], resultValues[0].startingStats[1], resultValues[0].startingStats[2], resultValues[0].startingStats[0] + resultValues[0].startingStats[1] + resultValues[0].startingStats[2]],\r\n            [resultValues[0].startingMult[0], resultValues[0].startingMult[1], resultValues[0].startingMult[2], resultValues[0].startingMult[0] + resultValues[0].startingMult[1] + resultValues[0].startingMult[2]],\r\n            [Math.round(resultValues[0].finalScore[0]), Math.round(resultValues[0].finalScore[1]), Math.round(resultValues[0].finalScore[2]), Math.round(resultValues[0].finalScore[0]) + Math.round(resultValues[0].finalScore[1]) + Math.round(resultValues[0].finalScore[2])],\r\n        ];\r\n\r\n        const rowLabels2 = [\"Starting  Stats\", \"Stats Multiplier\", \"Predicted Final Stats\"];\r\n\r\n        let results2 = [];\r\n\r\n        \r\n        results.push(\r\n            <div className=\"weights\" key={resultValues[0].finalScore[0]}>\r\n                <div className=\"weight-row\">\r\n                    <button id=\"results-toggle\" type=\"button\" onClick={this.onToggleResults}>{this.state.show ? \"Hide Results\" : \"Show Results\"}</button>\r\n                </div>\r\n                {\r\n                    this.state.show &&\r\n                    <>\r\n                        <div className=\"number-table\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Vocal</th>\r\n                                        <th>Dance</th>\r\n                                        <th>Visual</th>\r\n                                        <th>Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {resultsTable.map((row, rowIndex) => (\r\n                                        <tr key={rowIndex}>\r\n                                            <td>{rowLabels[rowIndex]}</td> \r\n                                            {row.map((num, colIndex) => (\r\n                                                <td key={colIndex}>\r\n                                                    {rowIndex === 1 ? `${num}%` : num}\r\n                                                </td>\r\n                                            ))}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n        \r\n        \r\n     \r\n\r\n\r\n        return (\r\n            <div className=\"tier-list\">\r\n                <div className=\"section-explanation\">\r\n                    {results}\r\n                </div>\r\n                <div className=\"selectors\">\r\n                    <span className=\"selectLabel\">Show Stats:</span>\r\n                    <Select className=\"select\" options={dropdownOptions} onChange={this.onDropdown1Changed} defaultValue={{ value: \"none\", label: \"None\" }} />\r\n                    <Select className=\"select\" options={dropdownOptions} onChange={this.onDropdown2Changed} defaultValue={{ value: \"none\", label: \"None\" }} />\r\n                    <Select className=\"select\" options={dropdownOptions} onChange={this.onDropdown3Changed} defaultValue={{ value: \"none\", label: \"None\" }} />\r\n                </div>\r\n                <span className=\"label\">\r\n                Cards are ordered within tiers, but tiers are relatively arbitrary since I just used the Uma setting. <br />\r\n                    Asari cards ruin literally everything I've done because I forgot they existed, and thus, will not be implemented for now. \r\n                </span>\r\n                {tiers}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst tierNames = ['S', 'A', 'B', 'C', 'D', 'E', 'F']\r\nfunction processCards(cards, weights, selectedCards) {\r\n    \r\n    let processedCards = [];\r\n    selectedCards = selectedCards.slice();\r\n    \r\n    // Calculate some stuff here so we don't have to do it a million times later\r\n    for (let card = 0; card < selectedCards.length; card++) {\r\n        let selectedCard = selectedCards[card];\r\n        selectedCard.index = card;\r\n    }\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n        let info = {};\r\n        let card = JSON.parse(JSON.stringify(cards[i]));\r\n        card.index = 6;\r\n\r\n        // Add starting stats and stats from events\r\n        let score = 0;\r\n        let statGains = card.start_b;\r\n\r\n        info.type = card.type;\r\n        info.plan = card.plan;\r\n        info.start_b = card.start_b;\r\n        info.pb = card.pb;\r\n        info.spRate = card.sp_r;\r\n        info.spp = card.spp;\r\n\r\n        if (card.type === 0) {\r\n            statGains += card.pb * weights.vocalLessons[0];\r\n        } else if (card.type === 1) {\r\n            statGains += card.pb * weights.danceLessons[0];\r\n        } else {\r\n            statGains += card.pb * weights.visualLessons[0];\r\n        }\r\n\r\n        if (card.type === 0) {\r\n            statGains += card.lb * weights.vocalLessons[1];\r\n        } else if (card.type === 1) {\r\n            statGains += card.lb * weights.danceLessons[1];\r\n        } else {\r\n            statGains += card.lb * weights.visualLessons[1];\r\n        }\r\n\r\n        if (card.type === 0) {\r\n            statGains += card.sp_lb * weights.vocalLessons[2];\r\n        } else if (card.type === 1) {\r\n            statGains += card.sp_lb * weights.danceLessons[2];\r\n        } else {\r\n            statGains += card.sp_lb * weights.visualLessons[2];\r\n        }\r\n\r\n        if (card.type === 0) {\r\n            statGains += card.n_lb * weights.vocalLessons[3];\r\n        } else if (card.type === 1) {\r\n            statGains += card.n_lb * weights.danceLessons[3];\r\n        } else {\r\n            statGains += card.n_lb * weights.visualLessons[3];\r\n        }\r\n\r\n        statGains += card.rest_b * weights.rest;\r\n        statGains += card.gb * weights.gift;\r\n        statGains += card.db * weights.date;\r\n        statGains += card.sb * weights.shop;\r\n        statGains += card.cb * weights.classroom;\r\n        statGains += card.pdb * weights.drink;\r\n        statGains += card.mb;\r\n        \r\n        statGains += card.ub * weights.upgrade.reduce((total, current) => total + current, 0);\r\n        statGains += card.m_ub * weights.upgrade[1];\r\n\r\n        statGains += card.a_cb * weights.cardAcq[0];\r\n        statGains += card.m_cb * weights.cardAcq[1];\r\n        statGains += card.con_cb * weights.cardAcq[2];\r\n\r\n        statGains += card.remove_b * weights.removal;\r\n\r\n        // Convert stat gains to score\r\n        score += statGains;\r\n\r\n        processedCards.push({\r\n            id: card.id,\r\n            lb: card.limit_break,\r\n            score: score,\r\n            info: info,\r\n            char_name: card.char_name\r\n        })\r\n    }\r\n    processedCards.sort((a, b) => b.score - a.score);\r\n    return processedCards;\r\n}\r\n\r\nfunction processScores(processedCards, weights, selectedCards) {\r\n    selectedCards = selectedCards.slice();\r\n    let startingStats = [0, 0, 0];\r\n    startingStats = startingStats.map((stat, index) => stat + weights.idolStats[index] + weights.memStats[index]);\r\n    \r\n\r\n    let idolMemMult = [0, 0, 0];\r\n    idolMemMult = idolMemMult.map((stat, index) => stat + weights.idolMult[index] + weights.memMult[index]);\r\n    let startingMult = idolMemMult;\r\n\r\n    let cardBonus = [0, 0, 0];\r\n    let cardStartBonus = [0, 0, 0];\r\n\r\n    let spRate = weights.spRate;\r\n    for (let card = 0; card < selectedCards.length; card++) {\r\n        let cardID = selectedCards[card].id;\r\n        let cardLB = selectedCards[card].limit_break\r\n        let type = selectedCards[card].type\r\n        let matchingCards = processedCards.find(processedCards => processedCards.id === cardID && processedCards.lb === cardLB);\r\n\r\n        startingStats[type] += matchingCards.info.start_b;\r\n        startingMult[type] += (matchingCards.info.pb*100);\r\n        \r\n        spRate += matchingCards.info.spRate;\r\n\r\n        cardBonus[type] += matchingCards.score;\r\n\r\n        cardStartBonus[type] += matchingCards.info.start_b;\r\n        \r\n    }\r\n    let examBonus = 50;\r\n    \r\n    let lessonGain = [(1 + (idolMemMult[0] / 100)) * weights.vocalLessons[0], (1 + (idolMemMult[1] / 100)) * weights.danceLessons[0], (1 + (idolMemMult[2] / 100)) * weights.visualLessons[0]]\r\n    \r\n    let finalScore = startingStats.map((stat, index) => stat + cardBonus[index] + lessonGain[index] + weights.classroomStats[index] + examBonus - cardStartBonus[index]);\r\n    let roundedScore = Object.fromEntries(\r\n        Object.entries(finalScore).map(([key, value]) => [key, Math.min(value, weights.statCap)])\r\n    );\r\n\r\n    let results = [{\r\n        startingStats: startingStats,\r\n        startingMult: startingMult,\r\n        spRate: spRate,\r\n        cardBonus: cardBonus,\r\n        finalScore: roundedScore,\r\n    }]\r\n    \r\n    return results;\r\n    }\r\n   \r\n\r\nexport default TierList;"]},"metadata":{},"sourceType":"module"}