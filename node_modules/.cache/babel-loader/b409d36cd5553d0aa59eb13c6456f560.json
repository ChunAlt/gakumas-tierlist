{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chun\\\\GakuTest\\\\src\\\\components\\\\SupportCard.js\";\nimport React from 'react';\nimport { supportCardProperties } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SupportCard(props) {\n  let lit_up = \"\";\n  let dark = \"\";\n\n  for (let i = 0; i < 4; i++) {\n    if (i < props.lb) {\n      lit_up += \"◆\";\n    } else {\n      dark += \"◆\";\n    }\n  }\n\n  let statDisplays = [\"\", \"\", \"\"];\n\n  for (let i = 0; i < 3; i++) {\n    let stat = props.stats[i];\n    if (stat == \"none\") continue;\n    let value = props.card[stat];\n\n    if (stat == \"fs_bonus\") {\n      console.log(\"pre: \" + value);\n      value *= props.card[\"unique_fs_bonus\"];\n      console.log(value);\n    } else if (stat == \"specialty_rate\") {\n      value = (value + 100) * props.card[\"unique_specialty\"] * props.card[\"fs_specialty\"] - 100;\n    }\n\n    if (value < 1) {\n      value *= 100;\n    } else if (value < 2 && stat != \"race_bonus\") {\n      value -= 1;\n      value *= 100;\n    }\n\n    value = Math.round(value);\n    statDisplays[i] = `${value}${supportCardProperties[stat].shorthand}`;\n  }\n\n  const alreadySelected = props.selected.indexOf(props.charName) > -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"support-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: alreadySelected ? \"support-card-image selected\" : \"support-card-image\",\n      name: props.id,\n      src: process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + props.id + \".png\",\n      title: props.charName,\n      alt: props.charName,\n      onClick: alreadySelected ? () => {} : props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"limit-breaks\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lb-yes\",\n        children: lit_up\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lb-no\",\n        children: dark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"score\",\n      onClick: () => console.log(props.info),\n      children: Math.round(props.score)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"stat-1\",\n      children: statDisplays[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"stat-2\",\n      children: statDisplays[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"stat-3\",\n      children: statDisplays[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SupportCard;\nexport default SupportCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupportCard\");","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SupportCard.js"],"names":["React","supportCardProperties","SupportCard","props","lit_up","dark","i","lb","statDisplays","stat","stats","value","card","console","log","Math","round","shorthand","alreadySelected","selected","indexOf","charName","id","process","env","PUBLIC_URL","onClick","info","score"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { supportCardProperties } from '../constants';\n\nfunction SupportCard(props) {\n    let lit_up = \"\";\n    let dark = \"\";\n    \n    for(let i = 0; i < 4; i++) {\n        if (i < props.lb) {\n            lit_up += \"◆\";\n        } else {\n            dark += \"◆\";\n        }\n    }\n\n    let statDisplays = [\"\",\"\",\"\"];\n\n    for(let i=0; i<3; i++) {\n        let stat = props.stats[i];\n        if (stat == \"none\") continue;\n        let value = props.card[stat];\n        if (stat == \"fs_bonus\") {\n            console.log(\"pre: \" + value);\n            value *= props.card[\"unique_fs_bonus\"];\n            console.log(value);\n        } else if (stat == \"specialty_rate\") {\n            value = (value + 100) * props.card[\"unique_specialty\"] * props.card[\"fs_specialty\"] - 100;\n        }\n        if (value < 1) {\n            value *= 100;\n        } else if (value < 2 && stat != \"race_bonus\") {\n            value -= 1;\n            value *= 100;\n        }\n        value = Math.round(value);\n        statDisplays[i] = `${value}${supportCardProperties[stat].shorthand}`;\n    }\n\n    const alreadySelected = props.selected.indexOf(props.charName) > -1;\n\n    return (\n        <div className=\"support-card\">\n            <img\n                className={alreadySelected ? \"support-card-image selected\" : \"support-card-image\"}\n                name={props.id}\n                src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + props.id + \".png\"}\n                title={props.charName}\n                alt={props.charName}\n                onClick={alreadySelected ? ()=>{} : props.onClick}\n            />\n            <span className=\"limit-breaks\">\n                <span className=\"lb-yes\">{lit_up}</span>\n                <span className=\"lb-no\">{dark}</span>\n            </span>\n            <span className=\"score\" onClick={() => console.log(props.info)}>\n                {Math.round(props.score)}\n            </span>\n            <span className=\"stat-1\">\n                {statDisplays[0]}\n            </span>\n            <span className=\"stat-2\">\n                {statDisplays[1]}\n            </span>\n            <span className=\"stat-3\">\n                {statDisplays[2]}\n            </span>\n        </div>\n    );\n}\n\nexport default SupportCard;"]},"metadata":{},"sourceType":"module"}