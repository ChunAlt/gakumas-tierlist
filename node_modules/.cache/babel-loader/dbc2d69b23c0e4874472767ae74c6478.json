{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chun\\\\GakuTest\\\\src\\\\components\\\\SelectedCards.js\";\nimport React from 'react';\nimport cards from '../cards';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png'; //import events from '../card-events';\n\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type_to_icon = [VoiceIcon, DanceIcon, VisualIcon];\n\nfunction SelectedCards(props) {\n  let cards = [];\n  let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n  let pPoints = props.weights.memPoints;\n\n  for (let i = 0; i < props.selectedCards.length; i++) {\n    let lit_up = \"\";\n    let dark = \"\";\n    let card = props.selectedCards[i];\n    spRate[card.type] += card.sp_r;\n    pPoints += card.spp;\n\n    for (let j = 0; j < 4; j++) {\n      if (j < card.limit_break) {\n        lit_up += \"◆\";\n      } else {\n        dark += \"◆\";\n      }\n    }\n\n    cards.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"support-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"support-card-image\",\n        name: card.id,\n        src: process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\",\n        title: card.id,\n        alt: card.id,\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"type-icon\",\n        name: \"type icon\",\n        src: type_to_icon[card.type],\n        title: \"type\",\n        alt: \"card type\",\n        onClick: () => props.onClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"limit-breaks\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-yes\",\n          children: lit_up\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lb-no\",\n          children: dark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score\",\n        children: Math.round(props.score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  }\n\n  let noSP = [(100 - spRate[0]) / 100, (100 - spRate[1]) / 100, (100 - spRate[2]) / 100];\n  let spRate4 = Math.pow(1 - noSP[0] * noSP[1] * noSP[2], 4);\n  let spRateTotal = Math.round(spRate4 * 10000) / 100;\n  console.log(noSP);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: \"Support Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-explanation\",\n      children: [\"The cards you're using. Click one to remove it, and click one in the tier list to add it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 106\n      }, this), \"The score will consider the stats gained when training with these cards.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), cards, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"SP Lesson Rate: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[0], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[1], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 53\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [spRate[2], \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 73\n      }, this), \" - Probably of at least 1 SP Lesson each week (Master): \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: spRateTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 148\n      }, this), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 170\n      }, this), \"Starting P Points: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: pPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SelectedCards;\nexport default SelectedCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedCards\");","map":{"version":3,"sources":["C:/Users/Chun/GakuTest/src/components/SelectedCards.js"],"names":["React","cards","VoiceIcon","DanceIcon","VisualIcon","type_to_icon","SelectedCards","props","spRate","weights","pPoints","memPoints","i","selectedCards","length","lit_up","dark","card","type","sp_r","spp","j","limit_break","push","id","process","env","PUBLIC_URL","onClick","Math","round","score","noSP","spRate4","pow","spRateTotal","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cards from '../cards';\nimport VoiceIcon from '../icons/utx_ico_obtain_00.png';\nimport DanceIcon from '../icons/utx_ico_obtain_01.png';\nimport VisualIcon from '../icons/utx_ico_obtain_02.png';\n\n//import events from '../card-events';\n/*\nconst raceRewards = [\n    10,\n    8,\n    5\n]\n*/\n\nconst type_to_icon = [\n    VoiceIcon,\n    DanceIcon,\n    VisualIcon,\n]\n\nfunction SelectedCards(props) {\n    let cards = [];\n    let spRate = [props.weights.spRate, props.weights.spRate, props.weights.spRate];\n    let pPoints = props.weights.memPoints;\n    for (let i = 0; i < props.selectedCards.length; i++) {\n        let lit_up = \"\";\n        let dark = \"\";\n        let card = props.selectedCards[i];\n        spRate[card.type] += card.sp_r;\n        pPoints += card.spp;\n\n        for (let j = 0; j < 4; j++) {\n            if (j < card.limit_break) {\n                lit_up += \"◆\";\n            } else {\n                dark += \"◆\";\n            }\n        }\n\n        cards.push(\n            <div key={card.id} className=\"support-card\">\n                <img\n                    className=\"support-card-image\"\n                    name={card.id}\n                    src={process.env.PUBLIC_URL + \"/cardImages/support_card_s_\" + card.id + \".png\"}\n                    title={card.id}\n                    alt={card.id}\n                    onClick={() => props.onClick(card)}\n                />\n                <img\n                    className=\"type-icon\"\n                    name=\"type icon\"\n                    src={type_to_icon[card.type]}\n                    title=\"type\"\n                    alt=\"card type\"\n                    onClick={() => props.onClick(card)}\n                />\n                <span className=\"limit-breaks\">\n                    <span className=\"lb-yes\">{lit_up}</span>\n                    <span className=\"lb-no\">{dark}</span>\n                </span>\n                <span className=\"score\">\n                    {Math.round(props.score)}\n                </span>\n            </div>\n        );\n\n    }\n\n    let noSP = [(100 - spRate[0]) / 100, (100 - spRate[1]) / 100, (100 - spRate[2]) / 100];\n    let spRate4 = Math.pow((1 - (noSP[0] * noSP[1] * noSP[2])), 4);\n    let spRateTotal = Math.round(spRate4 * 10000)/100;\n    console.log(noSP)\n    return (\n        <div className=\"selected-cards\">\n            <div className=\"section-header\">Support Deck</div>\n            <div className=\"section-explanation\">\n                The cards you're using. Click one to remove it, and click one in the tier list to add it.<br/>\n                The score will consider the stats gained when training with these cards.\n            </div>\n            {cards}\n            <div>\n                SP Lesson Rate: <b>{spRate[0]}%</b>/<b>{spRate[1]}%</b>/<b>{spRate[2]}%</b> - Probably of at least 1 SP Lesson each week (Master): <b>{spRateTotal}</b>% <br />\n                Starting P Points: <b>{pPoints}</b>\n            </div>\n            {/*\n            <div>\n                Examples:\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Voice (4 Gift, 2 Shop)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 1 Shop, 4 Rest)</button>\n                <button className=\"btn-preset\" onClick={() => props.onLoadPreset([10001, 10002, 10003, 10004, 10005])}>Dance/Visual (1 Gift, 3 Shop)</button>\n\n            </div>\n            */}\n        </div>\n    );\n}\n\nexport default SelectedCards;"]},"metadata":{},"sourceType":"module"}